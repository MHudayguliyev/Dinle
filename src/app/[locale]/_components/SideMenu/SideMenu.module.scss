@use '../../_styles/globalTypography.scss'as *;
@use '../../_styles/globalBreakPoints.scss'as *;
@use '../../_styles/globalFunctions.scss' as *;
@use '../../_styles/globalShapes.scss' as GShapes;
@use '../../_styles/globalAnimation.scss' as GAnimation;
@use '../../_styles/globalMixins.scss' as GMixin;

.sidemenu__container {
    position: fixed;
    top: 0;
    right: -360px;
    width: 360px;
    height: calc(100vh - 105px);
    background: var(--sidemenu-main-bg);
    backdrop-filter: blur(35px);
    transition: right .4s var(--transition-cubic);
    z-index: GShapes.$sideMenuZIndex + GShapes.$ZIndexAddition;

    display: flex;
    flex-direction: column;
    gap: 10px;
    user-select: none;
    overflow-y: overlay;
    &::-webkit-scrollbar {
        display: none;
    }

    .head {
        padding: 4px 20px;
    }

    .list {
        display: flex;
        flex-direction: column;
        gap: 8px;
        .item {
            position:relative;
            display: flex;
            width: 100%;
            padding: 4px 20px;
            justify-content: space-between;
            align-items: center;
            gap: 14px;
            cursor: pointer;
            
            &:hover {
                background-color: rgba(25, 25, 25, 1);
            }

            .flex1 {
                display: flex;
                gap: 10px;
                align-items: center;
                .content {
                    h4, div {
                        @include GMixin.textOverflow();
                    }
                    h4{
                        font-weight: calc($fontWeightMedium + 100);
                        font-size: $fontSizeBig + px;
                        line-height: calc($lineHeightBig + 2) + px;
                        color: var(--text-color);
                        transform: translateX(0);
                        transition: transform .3s;
                    }
                    div {
                        font-weight: $fontWeightRegular;
                        font-size: $fontSizeBig + px;
                        line-height: calc($lineHeightBig + 1.2) + px;
                        color: rgb(184, 184, 184)
                    }

                    .running {
                        display: flex;
                    }

                    .paddLeft {
                        transform: translateX(5px);
                    }
                }


                .image__container {
                    position: relative;
                    img {
                        height: 47px;
                        width: 47px;
                        border-radius: var(--border-radius-sm);
                        object-fit: cover;
                    }
                    .imageActive {
                        border: 1px solid var(--text-color);
                        border-radius: calc(var( --border-radius) - 6px);
                        animation: animateFn 1s linear;
                    }

                    .equalizer {
                        position: absolute;
                        top: 16.5px;
                        left: 13px;
                        display: none;
                    }
                    .equalizerActive {
                        display: block;
                        animation: animateFn 1s linear;
                    }
                }
            }
        }

        .activeItem {
            background-color: rgba(25, 25, 25, 1);
        }

        .item::after {
            content: '';
            height: 1px;
            width: 270px;
            background: rgba(255, 255, 255, 0.1);
            position: absolute;
            right: 0;
            top: 62px;
        }
    }


    @media screen and (max-width:$md) {
        height: calc(100vh - 155px);
    }
}

.showMenu {
    right: 0;
}